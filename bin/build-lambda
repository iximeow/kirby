#!/bin/bash
set -euo pipefail

if [[ ! $(which x86_64-unknown-linux-musl-gcc) ]]; then
  brew tap messense/macos-cross-toolchains
  brew install x86_64-unknown-linux-musl
fi

if [[ ! $(which cross) ]]; then
  cargo install cross
fi

if [[ -n "${PGO:-}" ]]; then
  # STEP 0: Make sure there is no left-over profiling data from previous runs
  rm -rf /tmp/pgo-data

  # STEP 1: Build the instrumented binaries
  RUSTFLAGS="-Cprofile-generate=/tmp/pgo-data -Cllvm-args=-vp-counters-per-site=4" \
    cargo build --release

  # STEP 2: Run the instrumented binaries with some typical data
  ls logs/* | xargs -L1 target/release/kirby

  # STEP 3: Merge the `.profraw` files into a `.profdata` file
  $(ls ~/.rustup/toolchains/*/lib/rustlib/*/bin/llvm-profdata) \
    merge -o /tmp/pgo-data/merged.profdata /tmp/pgo-data

  # STEP 4: Use the `.profdata` file for guiding optimizations
  RUSTFLAGS="-Cprofile-use=/tmp/pgo-data/merged.profdata" \
    cross build --release --target x86_64-unknown-linux-musl
else
  cross build --release --target x86_64-unknown-linux-musl
fi
